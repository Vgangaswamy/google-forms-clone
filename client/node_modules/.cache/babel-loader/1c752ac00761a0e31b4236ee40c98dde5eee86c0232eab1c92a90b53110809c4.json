{"ast":null,"code":"var _jsxFileName = \"/Users/Cupcake/google-forms-clone/client/src/components/FormList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './FormList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormList = () => {\n  _s();\n  const [forms, setForms] = useState([]);\n  useEffect(() => {\n    const fetchForms = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/forms');\n        setForms(response.data || []); // Ensure forms is an array\n      } catch (error) {\n        console.error('Error fetching forms:', error);\n        setForms([]); // Set to empty array in case of error\n      }\n    };\n    fetchForms();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Available Forms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), forms.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: forms.map(form => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: form.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: form.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: form.questions && form.questions.length > 0 ? form.questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: question.questionText\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 21\n          }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"No questions available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this)]\n      }, form._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No forms available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(FormList, \"CZpO2lL2hZXkK89eHthUoo0BBgE=\");\n_c = FormList;\nexport default FormList;\nvar _c;\n$RefreshReg$(_c, \"FormList\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","FormList","_s","forms","setForms","fetchForms","response","get","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","form","title","description","questions","question","index","questionText","_id","_c","$RefreshReg$"],"sources":["/Users/Cupcake/google-forms-clone/client/src/components/FormList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './FormList.css'; \n\nconst FormList = () => {\n  const [forms, setForms] = useState([]);\n\n  useEffect(() => {\n    const fetchForms = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/forms');\n        setForms(response.data || []); // Ensure forms is an array\n      } catch (error) {\n        console.error('Error fetching forms:', error);\n        setForms([]); // Set to empty array in case of error\n      }\n    };\n\n    fetchForms();\n  }, []);\n\n  return (\n    <div>\n      <h2>Available Forms</h2>\n      {forms.length > 0 ? (\n        <ul>\n          {forms.map((form) => (\n            <li key={form._id}>\n              <h3>{form.title}</h3>\n              <p>{form.description}</p>\n              <ul>\n                {form.questions && form.questions.length > 0 ? (\n                  form.questions.map((question, index) => (\n                    <li key={index}>{question.questionText}</li>\n                  ))\n                ) : (\n                  <li>No questions available</li>\n                )}\n              </ul>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No forms available</p>\n      )}\n    </div>\n  );\n};\n\nexport default FormList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd,MAAMS,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,iCAAiC,CAAC;QACnEH,QAAQ,CAACE,QAAQ,CAACE,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC;MACjC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC7CL,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;MAChB;IACF,CAAC;IAEDC,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAAW,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACvBZ,KAAK,CAACa,MAAM,GAAG,CAAC,gBACfhB,OAAA;MAAAW,QAAA,EACGR,KAAK,CAACc,GAAG,CAAEC,IAAI,iBACdlB,OAAA;QAAAW,QAAA,gBACEX,OAAA;UAAAW,QAAA,EAAKO,IAAI,CAACC;QAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrBf,OAAA;UAAAW,QAAA,EAAIO,IAAI,CAACE;QAAW;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzBf,OAAA;UAAAW,QAAA,EACGO,IAAI,CAACG,SAAS,IAAIH,IAAI,CAACG,SAAS,CAACL,MAAM,GAAG,CAAC,GAC1CE,IAAI,CAACG,SAAS,CAACJ,GAAG,CAAC,CAACK,QAAQ,EAAEC,KAAK,kBACjCvB,OAAA;YAAAW,QAAA,EAAiBW,QAAQ,CAACE;UAAY,GAA7BD,KAAK;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAA6B,CAC5C,CAAC,gBAEFf,OAAA;YAAAW,QAAA,EAAI;UAAsB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAC/B;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA,GAXEG,IAAI,CAACO,GAAG;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAYb,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,gBAELf,OAAA;MAAAW,QAAA,EAAG;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACzB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACb,EAAA,CA3CID,QAAQ;AAAAyB,EAAA,GAARzB,QAAQ;AA6Cd,eAAeA,QAAQ;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}