{"ast":null,"code":"var _jsxFileName = \"/Users/Cupcake/google-forms-clone/client/src/components/FormList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './FormList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormList = () => {\n  _s();\n  const [forms, setForms] = useState([]);\n  useEffect(() => {\n    const fetchForms = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/forms');\n        setForms(response.data);\n      } catch (error) {\n        console.error('Error fetching forms:', error);\n      }\n    };\n    fetchForms();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Recent Forms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: forms.length > 0 ? forms.map(form => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: form.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: form.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }, this), form.responses && form.responses.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: form.responses.map((response, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: [\"Response \", index + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 23\n            }, this), Object.keys(response.answers).map(questionId => /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [\"Question \", questionId, \": \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 27\n              }, this), Array.isArray(response.answers[questionId]) ? response.answers[questionId].join(', ') : response.answers[questionId]]\n            }, questionId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 25\n            }, this))]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No responses available for this form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this)]\n      }, form._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No recent forms available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(FormList, \"CZpO2lL2hZXkK89eHthUoo0BBgE=\");\n_c = FormList;\nexport default FormList;\nvar _c;\n$RefreshReg$(_c, \"FormList\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","FormList","_s","forms","setForms","fetchForms","response","get","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","form","title","description","responses","index","Object","keys","answers","questionId","Array","isArray","join","_id","_c","$RefreshReg$"],"sources":["/Users/Cupcake/google-forms-clone/client/src/components/FormList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './FormList.css';\n\nconst FormList = () => {\n  const [forms, setForms] = useState([]);\n\n  useEffect(() => {\n    const fetchForms = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/forms');\n        setForms(response.data);\n      } catch (error) {\n        console.error('Error fetching forms:', error);\n      }\n    };\n\n    fetchForms();\n  }, []);\n\n  return (\n    <div>\n      <h3>Recent Forms</h3>\n      <ul>\n        {forms.length > 0 ? (\n          forms.map((form) => (\n            <li key={form._id}>\n              <h4>{form.title}</h4>\n              <p>{form.description}</p>\n              {/* Check if the form has responses */}\n              {form.responses && form.responses.length > 0 ? (\n                <ul>\n                  {form.responses.map((response, index) => (\n                    <li key={index}>\n                      <h5>Response {index + 1}</h5>\n                      {/* Display each answer */}\n                      {Object.keys(response.answers).map((questionId) => (\n                        <p key={questionId}>\n                          <strong>Question {questionId}: </strong>\n                          {Array.isArray(response.answers[questionId]) ? \n                            response.answers[questionId].join(', ') : \n                            response.answers[questionId]}\n                        </p>\n                      ))}\n                    </li>\n                  ))}\n                </ul>\n              ) : (\n                <p>No responses available for this form</p>\n              )}\n            </li>\n          ))\n        ) : (\n          <p>No recent forms available.</p>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default FormList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}