{"ast":null,"code":"var _jsxFileName = \"/Users/Cupcake/google-forms-clone/client/src/components/FormResponse.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormResponse = ({\n  formId\n}) => {\n  _s();\n  const [form, setForm] = useState(null);\n  const [answers, setAnswers] = useState({});\n  useEffect(() => {\n    const fetchForm = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/forms/${formId}`);\n        setForm(response.data);\n      } catch (error) {\n        console.error('Error fetching form:', error);\n      }\n    };\n    fetchForm();\n  }, [formId]);\n  const handleInputChange = (questionId, answer) => {\n    setAnswers({\n      ...answers,\n      [questionId]: answer\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await axios.post(`http://localhost:5000/api/forms/${formId}/responses`, {\n        answers\n      });\n      alert('Responses submitted successfully');\n    } catch (error) {\n      console.error('Error submitting responses:', error);\n    }\n  };\n  if (!form) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: form.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: form.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), form.questions.map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: question.questionText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), question.questionType === 'text' && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => handleInputChange(question._id, e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)]\n    }, question._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(FormResponse, \"PjFnVyVnTDsJuGc8izSHnp6JVFc=\");\n_c = FormResponse;\nexport default FormResponse;\nvar _c;\n$RefreshReg$(_c, \"FormResponse\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","FormResponse","formId","_s","form","setForm","answers","setAnswers","fetchForm","response","get","data","error","console","handleInputChange","questionId","answer","handleSubmit","e","preventDefault","post","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","title","description","questions","map","question","questionText","questionType","type","onChange","_id","target","value","_c","$RefreshReg$"],"sources":["/Users/Cupcake/google-forms-clone/client/src/components/FormResponse.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst FormResponse = ({ formId }) => {\n  const [form, setForm] = useState(null);\n  const [answers, setAnswers] = useState({});\n\n  useEffect(() => {\n    const fetchForm = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/forms/${formId}`);\n        setForm(response.data);\n      } catch (error) {\n        console.error('Error fetching form:', error);\n      }\n    };\n\n    fetchForm();\n  }, [formId]);\n\n  const handleInputChange = (questionId, answer) => {\n    setAnswers({\n      ...answers,\n      [questionId]: answer,\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await axios.post(`http://localhost:5000/api/forms/${formId}/responses`, { answers });\n      alert('Responses submitted successfully');\n    } catch (error) {\n      console.error('Error submitting responses:', error);\n    }\n  };\n\n  if (!form) return <div>Loading...</div>;\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h2>{form.title}</h2>\n      <p>{form.description}</p>\n      {form.questions.map((question) => (\n        <div key={question._id}>\n          <label>{question.questionText}</label>\n          {question.questionType === 'text' && (\n            <input\n              type=\"text\"\n              onChange={(e) => handleInputChange(question._id, e.target.value)}\n            />\n          )}\n          {/* Add more input types like multiple-choice, checkbox, etc. */}\n        </div>\n      ))}\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n};\n\nexport default FormResponse;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}