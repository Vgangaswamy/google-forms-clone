{"ast":null,"code":"var _jsxFileName = \"/Users/Cupcake/google-forms-clone/client/src/components/FormList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './FormList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormList = () => {\n  _s();\n  const [forms, setForms] = useState([]);\n  const [selectedFormId, setSelectedFormId] = useState(null); // Track the selected form for preview\n\n  useEffect(() => {\n    const fetchForms = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/forms');\n        setForms(response.data);\n      } catch (error) {\n        console.error('Error fetching forms:', error);\n      }\n    };\n    fetchForms();\n  }, []);\n  const toggleFormPreview = formId => {\n    setSelectedFormId(prevFormId => prevFormId === formId ? null : formId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Recent Forms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"form-list\",\n      children: forms.length > 0 ? forms.map(form => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"form-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-header\",\n          onClick: () => toggleFormPreview(form._id),\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: form.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: form.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this), selectedFormId === form._id && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-preview\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Form Preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 19\n          }, this), form.questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-question\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [\"Q\", index + 1, \": \", question.questionText]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 23\n            }, this), question.questionType === 'text' && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Answer: (Text Input)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 60\n            }, this), question.questionType === 'multiple-choice' && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Options: \", question.options.join(', ')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 25\n            }, this), question.questionType === 'checkbox' && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Options: \", question.options.join(', ')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 25\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this)), form.responses && form.responses.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-responses\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"User Responses:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: form.responses.map((response, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Submitted At:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 29\n                }, this), \" \", new Date(response.submittedAt).toLocaleString(), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: Object.keys(response.answers).map(questionId => /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Answer:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 69,\n                      columnNumber: 35\n                    }, this), \" \", response.answers[questionId]]\n                  }, questionId, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 33\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 29\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 27\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No responses yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this)]\n      }, form._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No recent forms available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(FormList, \"aFM5OQ1WuIPPsGTZeXjxtb0kPr4=\");\n_c = FormList;\nexport default FormList;\nvar _c;\n$RefreshReg$(_c, \"FormList\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","FormList","_s","forms","setForms","selectedFormId","setSelectedFormId","fetchForms","response","get","data","error","console","toggleFormPreview","formId","prevFormId","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","form","onClick","_id","title","description","questions","question","index","questionText","questionType","options","join","responses","Date","submittedAt","toLocaleString","Object","keys","answers","questionId","_c","$RefreshReg$"],"sources":["/Users/Cupcake/google-forms-clone/client/src/components/FormList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './FormList.css';\n\nconst FormList = () => {\n  const [forms, setForms] = useState([]);\n  const [selectedFormId, setSelectedFormId] = useState(null); // Track the selected form for preview\n\n  useEffect(() => {\n    const fetchForms = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/forms');\n        setForms(response.data);\n      } catch (error) {\n        console.error('Error fetching forms:', error);\n      }\n    };\n\n    fetchForms();\n  }, []);\n\n  const toggleFormPreview = (formId) => {\n    setSelectedFormId((prevFormId) => (prevFormId === formId ? null : formId));\n  };\n\n  return (\n    <div>\n      <h3>Recent Forms</h3>\n      <ul className=\"form-list\">\n        {forms.length > 0 ? (\n          forms.map((form) => (\n            <li key={form._id} className=\"form-item\">\n              <div\n                className=\"form-header\"\n                onClick={() => toggleFormPreview(form._id)}\n              >\n                <h4>{form.title}</h4>\n                <p>{form.description}</p>\n              </div>\n\n              {/* Conditionally display the form preview if selected */}\n              {selectedFormId === form._id && (\n                <div className=\"form-preview\">\n                  <h5>Form Preview</h5>\n                  {form.questions.map((question, index) => (\n                    <div key={index} className=\"form-question\">\n                      <strong>Q{index + 1}: {question.questionText}</strong>\n                      {question.questionType === 'text' && <p>Answer: (Text Input)</p>}\n                      {question.questionType === 'multiple-choice' && (\n                        <p>Options: {question.options.join(', ')}</p>\n                      )}\n                      {question.questionType === 'checkbox' && (\n                        <p>Options: {question.options.join(', ')}</p>\n                      )}\n                    </div>\n                  ))}\n\n                  {/* Display responses if available */}\n                  {form.responses && form.responses.length > 0 ? (\n                    <div className=\"form-responses\">\n                      <h5>User Responses:</h5>\n                      <ul>\n                        {form.responses.map((response, index) => (\n                          <li key={index}>\n                            <strong>Submitted At:</strong> {new Date(response.submittedAt).toLocaleString()}\n                            <ul>\n                              {Object.keys(response.answers).map((questionId) => (\n                                <li key={questionId}>\n                                  <strong>Answer:</strong> {response.answers[questionId]}\n                                </li>\n                              ))}\n                            </ul>\n                          </li>\n                        ))}\n                      </ul>\n                    </div>\n                  ) : (\n                    <p>No responses yet.</p>\n                  )}\n                </div>\n              )}\n            </li>\n          ))\n        ) : (\n          <p>No recent forms available.</p>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default FormList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}