{"ast":null,"code":"var _jsxFileName = \"/Users/Cupcake/google-forms-clone/client/src/components/FormResponse.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom'; // Hook to access formId from URL\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormResponse = () => {\n  _s();\n  const {\n    formId\n  } = useParams(); // Extract formId from URL\n  const [form, setForm] = useState(null);\n  const [answers, setAnswers] = useState({});\n  useEffect(() => {\n    const fetchForm = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/forms/${formId}`);\n        setForm(response.data);\n      } catch (error) {\n        console.error('Error fetching form:', error);\n        if (error.response && error.response.status === 404) {\n          alert(\"Form not found.\");\n        } else {\n          alert(\"An error occurred while fetching the form.\");\n        }\n      }\n    };\n    fetchForm();\n  }, [formId]);\n  const handleInputChange = (questionId, answer) => {\n    setAnswers({\n      ...answers,\n      [questionId]: answer\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await axios.post(`http://localhost:5000/api/forms/${formId}/responses`, {\n        answers\n      });\n      alert('Responses submitted successfully');\n    } catch (error) {\n      console.error('Error submitting responses:', error);\n    }\n  };\n  if (!form) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading form...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: form.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: form.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), form.questions.map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: question.questionText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), question.questionType === 'text' && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => handleInputChange(question._id, e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)]\n    }, question._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(FormResponse, \"OgZaQ9SBr+yc0LFl84sNa3+VY8w=\", false, function () {\n  return [useParams];\n});\n_c = FormResponse;\nexport default FormResponse;\nvar _c;\n$RefreshReg$(_c, \"FormResponse\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","jsxDEV","_jsxDEV","FormResponse","_s","formId","form","setForm","answers","setAnswers","fetchForm","response","get","data","error","console","status","alert","handleInputChange","questionId","answer","handleSubmit","e","preventDefault","post","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","title","description","questions","map","question","questionText","questionType","type","onChange","_id","target","value","_c","$RefreshReg$"],"sources":["/Users/Cupcake/google-forms-clone/client/src/components/FormResponse.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom'; // Hook to access formId from URL\n\nconst FormResponse = () => {\n  const { formId } = useParams(); // Extract formId from URL\n  const [form, setForm] = useState(null);\n  const [answers, setAnswers] = useState({});\n\n  useEffect(() => {\n    const fetchForm = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/forms/${formId}`);\n        setForm(response.data);\n      } catch (error) {\n        console.error('Error fetching form:', error);\n        if (error.response && error.response.status === 404) {\n          alert(\"Form not found.\");\n        } else {\n          alert(\"An error occurred while fetching the form.\");\n        }\n      }\n    };\n  \n    fetchForm();\n  }, [formId]);\n  \n  \n\n  const handleInputChange = (questionId, answer) => {\n    setAnswers({\n      ...answers,\n      [questionId]: answer,\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await axios.post(`http://localhost:5000/api/forms/${formId}/responses`, { answers });\n      alert('Responses submitted successfully');\n    } catch (error) {\n      console.error('Error submitting responses:', error);\n    }\n  };\n\n  if (!form) return <div>Loading form...</div>;\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h2>{form.title}</h2>\n      <p>{form.description}</p>\n      {form.questions.map((question) => (\n        <div key={question._id}>\n          <label>{question.questionText}</label>\n          {question.questionType === 'text' && (\n            <input\n              type=\"text\"\n              onChange={(e) => handleInputChange(question._id, e.target.value)}\n            />\n          )}\n          {/* You can add other input types like multiple-choice, checkbox, etc. */}\n        </div>\n      ))}\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n};\n\nexport default FormResponse;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}